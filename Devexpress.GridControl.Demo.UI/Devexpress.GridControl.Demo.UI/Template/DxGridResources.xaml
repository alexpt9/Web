<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:dxci="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:behaviours="clr-namespace:Devexpress.GridControl.Demo.UI.Behaviours"
                    xmlns:converter="clr-namespace:Devexpress.GridControl.Demo.UI.Converter"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <dx:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverseConverter"/>

    <converter:NumberToBooloeanConverter x:Key="numberToBooloeanConverter"/>
    <converter:DateTimeToBooleanConverter x:Key="dateTimeToBooloeanConverter"/>

    <DataTemplate x:Key="CustomizationAreaTemplateKey">
        <Button Width="10" 
                Height="10" 
                Padding="0" 
                Background="Transparent">
            <Button.Content>
                <Image  
                    Source="{dx:DXImage 'SvgImages/Dashboards/MasterFilter.svg'}" />
            </Button.Content>
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter Content="{TemplateBinding Content}"/>
                </ControlTemplate>
            </Button.Template>
            <dxmvvm:Interaction.Behaviors>
                <behaviours:ColumnSimpleButtonBehaviour/>
            </dxmvvm:Interaction.Behaviors>
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="LookupColumnTemplate">
        <dxg:GridColumn FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}">
            <dxg:GridColumn.EditSettings>
                <dxe:ComboBoxEditSettings ItemsSource="{Binding Source}"/>
            </dxg:GridColumn.EditSettings>
            <dxg:GridColumn.HeaderCustomizationAreaTemplate>
                <DataTemplate>
                    <dx:SimpleButton Width="20" Height="20">
                        <dxmvvm:Interaction.Behaviors>
                            <behaviours:ColumnSimpleButtonBehaviour/>
                        </dxmvvm:Interaction.Behaviors>
                    </dx:SimpleButton>
                </DataTemplate>
            </dxg:GridColumn.HeaderCustomizationAreaTemplate>
        </dxg:GridColumn>
    </DataTemplate>

    <DataTemplate x:Key="CheckboxTemplate">
        <dxg:GridColumn Header="" 
                        HorizontalHeaderContentAlignment="Center"
                        FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Id, RelativeSource={RelativeSource Self}}"
                        Fixed="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Fixed, RelativeSource={RelativeSource Self}}"
                        ShowCheckBoxInHeader="True"
                        AllowSorting="False"
                        AllowColumnFiltering="False"/>
    </DataTemplate>

    <DataTemplate x:Key="DefaultColumnTemplate">
        <dxg:GridColumn FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Id, RelativeSource={RelativeSource Self}}"
                        Header="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).HeaderName, RelativeSource={RelativeSource Self}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        Fixed="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Fixed, RelativeSource={RelativeSource Self}}"
                        Width="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Width, RelativeSource={RelativeSource Self}}"
                        HeaderCustomizationAreaTemplate="{StaticResource CustomizationAreaTemplateKey}"
                        SortMode="Value">
            <dxg:GridColumn.CellTemplate>
                <DataTemplate>
                    <Border x:Name="border">
                        <dxe:TextEdit Name="PART_Editor" />
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Value, Converter={StaticResource numberToBooloeanConverter}}" Value="true">
                            <Setter TargetName="PART_Editor" Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter TargetName="PART_Editor" Property="DisplayFormatString" Value="N0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Value, Converter={StaticResource dateTimeToBooloeanConverter}}" Value="true">
                            <Setter TargetName="PART_Editor" Property="DisplayFormatString" Value="dd\/MM\/yyyy"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </dxg:GridColumn.CellTemplate>
        </dxg:GridColumn>
    </DataTemplate>

    <ControlTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=ColumnFilterTemplate, IsThemeIndependent=True}" TargetType="{x:Type ToggleButton}">
        <Grid></Grid>
    </ControlTemplate>
    <!--Grid x:Name="Root"
              Background="#00000000"
              Height="13"
              Margin="40,4,0,0"
              Width="13">
            <Image  HorizontalAlignment="Center" 
                    VerticalAlignment="Center" 
                    Stretch="Fill"
                    Width="10"
                    Margin="0"
                    Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityInverseConverter}}"
                    Source="{dx:DXImage 'SvgImages/Dashboards/MasterFilter.svg'}" >
                <Image.Opacity>
                    <Binding Path="IsChecked" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:BoolToVisibilityViaOpacityConverter Invert="True"/>
                        </Binding.Converter>
                    </Binding>
                </Image.Opacity>
            </Image>
            <Image  HorizontalAlignment="Center" 
                    VerticalAlignment="Center" 
                    Stretch="Fill"
                    Width="10"
                    Margin="0"
                    Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Source="{dx:DXImage 'SvgImages/Dashboards/MasterFilter.svg'}" >
                <Image.Opacity>
                    <Binding Path="IsPressed" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:BoolToVisibilityViaOpacityConverter Invert="True"/>
                        </Binding.Converter>
                    </Binding>
                </Image.Opacity>
            </Image>
            <Image  HorizontalAlignment="Center" 
                    VerticalAlignment="Center" 
                    Stretch="Fill"
                    Width="10"
                    Margin="0"
                    Visibility="{Binding IsPressed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Source="{dx:DXImage 'SvgImages/Dashboards/MasterFilter.svg'}" />


            <Image  HorizontalAlignment="Center" 
                    VerticalAlignment="Center" 
                    Stretch="Fill"
                    Width="10"
                    Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Source="{dx:DXImage 'SvgImages/Snap/QuickFilter.svg'}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width"
                        TargetName="Root"
                        Value="26"/>
                <Setter Property="Height"
                        TargetName="Root"
                        Value="26"/>
                <Setter Property="Margin"
                        TargetName="Root"
                        Value="-8"/>
            </Trigger>
        </ControlTemplate.Triggers>-->
    

    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FixedLineSeparatorTemplate, ThemeName=Office2019White}" TargetType="dxg:RowFixedLineSeparatorControl">
        <Border BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" BorderThickness="0.5,0,0,0"/>
    </ControlTemplate>

    <DataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=FixedColumnsDelimiterTemplate, ThemeName=Office2019White}">
        <Border BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"
                BorderThickness="0.5,0,0,0.5"/>
    </DataTemplate>

    <ControlTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=ControlTemplate, ThemeName=Office2019White}" TargetType="{x:Type dxg:GridColumnHeaderBase}">
        <Grid x:Name="PART_Root">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="headerLeftSeparator"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0,0,1,0"
                    Grid.Column="0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Visibility="Collapsed"/>
            <Border x:Name="headerRightSeparator"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0"
                    Grid.Column="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Visibility="Collapsed"/>
            <Border x:Name="PART_Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0,0,1,1"
                    Focusable="True"
                    Grid.Column="1">
            </Border>
            <!-- <dxg:ColumnHeaderLayout x:Name="PART_Layout" -->
            <!--                         Grid.Column="1" -->
            <!--                         Padding="4,2,4,3"/> -->
            <Border x:Name="PART_LayoutBorder" Grid.Column="1">
                <dxg:ColumnHeaderLayout x:Name="PART_Layout" Padding="4,2,4,3"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="DataColumnPosition" Value="Left">
                <Setter Property="Visibility"
                        TargetName="headerRightSeparator"
                        Value="Visible"/>
                <Setter Property="Width"
                        TargetName="headerRightSeparator"
                        Value="{Binding ActualBandRightSeparatorWidth}"/>
                <Setter Property="Background" TargetName="headerRightSeparator">
                    <Setter.Value>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="ActualBandHeaderRightSeparatorColor"/>
                                <Binding Path="BorderBrush" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxg:BandSeparatorColorConverter/>
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="DataColumnPosition" Value="Middle">
                <Setter Property="Visibility"
                        TargetName="headerRightSeparator"
                        Value="Visible"/>
                <Setter Property="Width"
                        TargetName="headerRightSeparator"
                        Value="{Binding ActualBandRightSeparatorWidth}"/>
                <Setter Property="Background" TargetName="headerRightSeparator">
                    <Setter.Value>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="ActualBandHeaderRightSeparatorColor"/>
                                <Binding Path="BorderBrush" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxg:BandSeparatorColorConverter/>
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="Visibility"
                        TargetName="headerLeftSeparator"
                        Value="Visible"/>
                <Setter Property="Width"
                        TargetName="headerLeftSeparator"
                        Value="{Binding ActualBandLeftSeparatorWidth}"/>
                <Setter Property="Background" TargetName="headerLeftSeparator">
                    <Setter.Value>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="ActualBandHeaderLeftSeparatorColor"/>
                                <Binding Path="BorderBrush" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxg:BandSeparatorColorConverter/>
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasRightSibling" Value="True"/>
                    <Condition Property="HasTopElement" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness"
                        TargetName="headerRightSeparator"
                        Value="0,0,1,0"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasRightSibling" Value="True"/>
                    <Condition Property="HasTopElement" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness"
                        TargetName="headerRightSeparator"
                        Value="0,0,1,0"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasRightSibling" Value="True"/>
                    <Condition Property="HasLeftSibling" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness"
                        TargetName="PART_Border"
                        Value="1,0,1,1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasRightSibling" Value="True"/>
                    <Condition Property="HasLeftSibling" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness"
                        TargetName="PART_Border"
                        Value="0,0,0,1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasRightSibling" Value="False"/>
                    <Condition Property="HasLeftSibling" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness"
                        TargetName="PART_Border"
                        Value="1,0,0,1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasRightSibling" Value="False"/>
                    <Condition Property="HasLeftSibling" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness"
                        TargetName="PART_Border"
                        Value="0,0,0,1"/>
            </MultiTrigger>
            <Trigger Property="ColumnPosition" Value="Standalone">
                <Setter Property="BorderThickness"
                        TargetName="PART_Border"
                        Value="1"/>
                <Setter Property="Padding"
                        TargetName="PART_Layout"
                        Value="{StaticResource {dxgt:GridColumnHeaderThemeKey ResourceKey=ContentMargin}}"/>
            </Trigger>
            <Trigger Property="ColumnPosition" Value="Right">
                <Setter Property="BorderThickness"
                        TargetName="PART_Border"
                        Value="1,0,0,1"/>
            </Trigger>
            <Trigger Property="dxg:ColumnBase.HeaderPresenterType" Value="GroupPanel">
                <Setter Property="Margin" TargetName="PART_Border">
                    <Setter.Value>
                        <Binding Path="(dxg:GridColumn.MergeWithPreviousGroup)">
                            <Binding.Converter>
                                <dx:BoolToObjectConverter FalseValue="0,0,3,0" TrueValue="-5,0,4,0"/>
                            </Binding.Converter>
                        </Binding>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding"
                        TargetName="PART_Layout"
                        Value="{StaticResource {dxgt:GridColumnHeaderThemeKey ResourceKey=ContentMargin}}"/>
                <Setter Property="Margin" TargetName="PART_Root">
                    <Setter.Value>
                        <Binding Path="(dxg:GridColumn.GroupLevel)">
                            <Binding.Converter>
                                <dxg:GroupPanelPaddingConverter Offset="4"/>
                            </Binding.Converter>
                        </Binding>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalAlignment"
                        TargetName="PART_Root"
                        Value="Top"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding"
                        TargetName="PART_Layout"
                        Value="14"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxci:AppearanceOptions.HasPadding), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Padding"
                        TargetName="PART_Layout"
                        Value="{Binding Path=(dxci:AppearanceOptions.Padding), RelativeSource={RelativeSource TemplatedParent}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxci:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="BorderThickness"
                        TargetName="PART_Border"
                        Value="{Binding Path=(dxci:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="Margin"
                        TargetName="PART_LayoutBorder"
                        Value="{Binding Path=(dxci:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowTemplate, ThemeName=Office2019White}" TargetType="dxg:RowControl">
        <Grid>
            <Border x:Name="Background" Background="{TemplateBinding Background}"/>
            <Border x:Name="BottomLine"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0,0,0,0.5"
                    VerticalAlignment="Bottom"/>
            <Grid x:Name="PART_LayoutPanel"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowHorizontalLine" Value="False">
                <Setter Property="Visibility"
                        TargetName="BottomLine"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ShowBottomLine" Value="True">
                <Setter Property="Visibility"
                        TargetName="BottomLine"
                        Value="Visible"/>
            </Trigger>
            <Trigger Property="FadeSelection" Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderUnfocusedBrush}}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}"/>
            </Trigger>
            <Trigger Property="ShowRowBreak" Value="True">
                <Setter Property="BorderBrush"
                        TargetName="BottomLine"
                        Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=RowBreakBrush}}"/>
                <Setter Property="BorderThickness"
                        TargetName="BottomLine"
                        Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=RowBreakThickness}}"/>
            </Trigger>
            <Trigger Property="FixedRowPosition" Value="Bottom">
                <Setter Property="VerticalAlignment"
                        TargetName="BottomLine"
                        Value="Top"/>
            </Trigger>
            <Trigger Property="IsLastFixedRow" Value="True">
                <Setter Property="Background"
                        TargetName="BottomLine"
                        Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowSeparatorBrush}}"/>
                <Setter Property="BorderThickness"
                        TargetName="BottomLine"
                        Value="0,1,0,1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>